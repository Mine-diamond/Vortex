name: Build-Windows-Installer
# 测试每次修改后的代码是否能正常构建exe文件

on:
  push:                      # 任意commit后触发
  workflow_dispatch:         # 允许手动触发

env:
  APP_NAME: Vortex
  # APP_VERSION: 1.0.0
  MAIN_JAR: Vortex-1.0.0.jar
  MAIN_CLASS: tech.minediamond.vortex.Launcher

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. 拉代码
      - name: Checkout
        uses: actions/checkout@v4

      # 2. (新步骤) 从 git tag 中提取版本号

      # github.ref_name 会包含 tag 名称, 例如: v1.0.1
      # ${GITHUB_REF_NAME#v} 会移除开头的 'v'
      - name: Extract version from tag
        shell: bash
        id: get_version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo "APP_VERSION=$VERSION" >> $GITHUB_ENV
          echo "MAIN_JAR=${{ env.APP_NAME }}-$VERSION.jar" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      # 2. Liberica 21（full = 自带 JavaFX + jpackage）
      - name: Set up Liberica JDK 21-full
        uses: actions/setup-java@v4
        with:
          distribution: liberica
          java-version: '21'
          architecture: x64
          java-package: jdk-full
          cache: maven

      # 3. Maven Build（产生 fat-jar）
      - name: Build with Maven
        run: mvn -B clean package

      # 4. jpackage 生成 app-image（绿色版）
      - name: jpackage – create app-image
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path build\app
          jpackage `
            --name "${{ env.APP_NAME }}" `
            --input target `
            --main-jar "${{ env.MAIN_JAR }}" `
            --main-class "${{ env.MAIN_CLASS }}" `
            --type app-image `
            --dest build\app `
            --icon packaging\windows\app_icon.ico `
            --app-version "${{ env.APP_VERSION }}" `
            --module-path "$env:JAVA_HOME\jmods" `
            --add-modules ALL-MODULE-PATH `
            --java-options "-DAPP_ENV=prod" 

      # 5. 使用 Minionguyjpro/Inno-Setup-Action 编译安装包
      - name: Compile Installer with Inno Setup Action
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          # 指定 .iss 文件路径
          path: setup.iss
          # 通过 options 参数把动态变量传给 Inno Setup
          options: /DAppName="${{ env.APP_NAME }}" /DAppVersion="${{ env.APP_VERSION }}"

      # 6. 上传产物
      - name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          name: Vortex-installer
          path: |
            Output\Vortex-Setup.exe
